//------------------------------------------------------------------------------
// <auto-generated>
//     Este código fue generado por una herramienta.
//     Versión de runtime:4.0.30319.42000
//
//     Los cambios en este archivo podrían causar un comportamiento incorrecto y se perderán si
//     se vuelve a generar el código.
// </auto-generated>
//------------------------------------------------------------------------------

namespace DXWebAsoc.BusinessLogic.WCFService {
    
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.ServiceContractAttribute(ConfigurationName="WCFService.IAsocService")]
    public interface IAsocService {
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IAsocService/CreateUser", ReplyAction="http://tempuri.org/IAsocService/CreateUserResponse")]
        void CreateUser(WcfService.Services.WCFUsuario user);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IAsocService/CreateUser", ReplyAction="http://tempuri.org/IAsocService/CreateUserResponse")]
        System.Threading.Tasks.Task CreateUserAsync(WcfService.Services.WCFUsuario user);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IAsocService/UpdateUser", ReplyAction="http://tempuri.org/IAsocService/UpdateUserResponse")]
        void UpdateUser(WcfService.Services.WCFUsuario user);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IAsocService/UpdateUser", ReplyAction="http://tempuri.org/IAsocService/UpdateUserResponse")]
        System.Threading.Tasks.Task UpdateUserAsync(WcfService.Services.WCFUsuario user);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IAsocService/ReadUser", ReplyAction="http://tempuri.org/IAsocService/ReadUserResponse")]
        WcfService.Services.WCFUsuario ReadUser(DXWebAsoc.Model.Entities.CObject user);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IAsocService/ReadUser", ReplyAction="http://tempuri.org/IAsocService/ReadUserResponse")]
        System.Threading.Tasks.Task<WcfService.Services.WCFUsuario> ReadUserAsync(DXWebAsoc.Model.Entities.CObject user);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IAsocService/ReadAllUser", ReplyAction="http://tempuri.org/IAsocService/ReadAllUserResponse")]
        WcfService.Services.WCFUsuario[] ReadAllUser();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IAsocService/ReadAllUser", ReplyAction="http://tempuri.org/IAsocService/ReadAllUserResponse")]
        System.Threading.Tasks.Task<WcfService.Services.WCFUsuario[]> ReadAllUserAsync();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IAsocService/DeleteUser", ReplyAction="http://tempuri.org/IAsocService/DeleteUserResponse")]
        void DeleteUser(WcfService.Services.WCFUsuario id);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IAsocService/DeleteUser", ReplyAction="http://tempuri.org/IAsocService/DeleteUserResponse")]
        System.Threading.Tasks.Task DeleteUserAsync(WcfService.Services.WCFUsuario id);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IAsocService/ValidateUser", ReplyAction="http://tempuri.org/IAsocService/ValidateUserResponse")]
        bool ValidateUser(string username, string password);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IAsocService/ValidateUser", ReplyAction="http://tempuri.org/IAsocService/ValidateUserResponse")]
        System.Threading.Tasks.Task<bool> ValidateUserAsync(string username, string password);
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public interface IAsocServiceChannel : DXWebAsoc.BusinessLogic.WCFService.IAsocService, System.ServiceModel.IClientChannel {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class AsocServiceClient : System.ServiceModel.ClientBase<DXWebAsoc.BusinessLogic.WCFService.IAsocService>, DXWebAsoc.BusinessLogic.WCFService.IAsocService {
        
        public AsocServiceClient() {
        }
        
        public AsocServiceClient(string endpointConfigurationName) : 
                base(endpointConfigurationName) {
        }
        
        public AsocServiceClient(string endpointConfigurationName, string remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public AsocServiceClient(string endpointConfigurationName, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public AsocServiceClient(System.ServiceModel.Channels.Binding binding, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(binding, remoteAddress) {
        }
        
        public void CreateUser(WcfService.Services.WCFUsuario user) {
            base.Channel.CreateUser(user);
        }
        
        public System.Threading.Tasks.Task CreateUserAsync(WcfService.Services.WCFUsuario user) {
            return base.Channel.CreateUserAsync(user);
        }
        
        public void UpdateUser(WcfService.Services.WCFUsuario user) {
            base.Channel.UpdateUser(user);
        }
        
        public System.Threading.Tasks.Task UpdateUserAsync(WcfService.Services.WCFUsuario user) {
            return base.Channel.UpdateUserAsync(user);
        }
        
        public WcfService.Services.WCFUsuario ReadUser(DXWebAsoc.Model.Entities.CObject user) {
            return base.Channel.ReadUser(user);
        }
        
        public System.Threading.Tasks.Task<WcfService.Services.WCFUsuario> ReadUserAsync(DXWebAsoc.Model.Entities.CObject user) {
            return base.Channel.ReadUserAsync(user);
        }
        
        public WcfService.Services.WCFUsuario[] ReadAllUser() {
            return base.Channel.ReadAllUser();
        }
        
        public System.Threading.Tasks.Task<WcfService.Services.WCFUsuario[]> ReadAllUserAsync() {
            return base.Channel.ReadAllUserAsync();
        }
        
        public void DeleteUser(WcfService.Services.WCFUsuario id) {
            base.Channel.DeleteUser(id);
        }
        
        public System.Threading.Tasks.Task DeleteUserAsync(WcfService.Services.WCFUsuario id) {
            return base.Channel.DeleteUserAsync(id);
        }
        
        public bool ValidateUser(string username, string password) {
            return base.Channel.ValidateUser(username, password);
        }
        
        public System.Threading.Tasks.Task<bool> ValidateUserAsync(string username, string password) {
            return base.Channel.ValidateUserAsync(username, password);
        }
    }
}
